{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useFetch = url => {\n  _s();\n  const [data, changeData] = useState(null);\n  const [isLoading, changeLoading] = useState(true);\n  const [error, changeError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(res => {\n        if (!res.ok) {\n          // error coming back from server\n          throw Error('could not fetch the data for that resource');\n        }\n        return res.json();\n      }).then(data => {\n        setIsPending(false);\n        setData(data);\n        setError(null);\n      }).catch(err => {\n        // auto catches network / connection error\n        setIsPending(false);\n        setError(err.message);\n      });\n    }, 1000);\n  }, [url]);\n  return {\n    data,\n    isLoading,\n    error\n  };\n};\n_s(useFetch, \"bRo4s4RonytiwmxyAuieAC7XqyE=\");\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","_s","data","changeData","isLoading","changeLoading","error","changeError","setTimeout","fetch","then","res","ok","Error","json","setIsPending","setData","setError","catch","err","message"],"sources":["C:/Users/Qmars/Desktop/react.js/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, changeData] = useState(null);\r\n  const [isLoading, changeLoading] = useState(true);\r\n  const [error, changeError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      fetch(url)\r\n      .then(res => {\r\n        if (!res.ok) { // error coming back from server\r\n          throw Error('could not fetch the data for that resource');\r\n        } \r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        setIsPending(false);\r\n        setData(data);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        // auto catches network / connection error\r\n        setIsPending(false);\r\n        setError(err.message);\r\n      })\r\n    }, 1000);\r\n  }, [url])\r\n\r\n  return {data, isLoading, error};\r\n}\r\n\r\nexport default useFetch;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAIC,GAAG,IAAK;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACzC,MAAM,CAACM,SAAS,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACjD,MAAM,CAACQ,KAAK,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,MAAM;MACfC,KAAK,CAACT,GAAG,CAAC,CACTU,IAAI,CAACC,GAAG,IAAI;QACX,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;UAAE;UACb,MAAMC,KAAK,CAAC,4CAA4C,CAAC;QAC3D;QACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;MACnB,CAAC,CAAC,CACDJ,IAAI,CAACR,IAAI,IAAI;QACZa,YAAY,CAAC,KAAK,CAAC;QACnBC,OAAO,CAACd,IAAI,CAAC;QACbe,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAI;QACZ;QACAJ,YAAY,CAAC,KAAK,CAAC;QACnBE,QAAQ,CAACE,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;EACV,CAAC,EAAE,CAACpB,GAAG,CAAC,CAAC;EAET,OAAO;IAACE,IAAI;IAAEE,SAAS;IAAEE;EAAK,CAAC;AACjC,CAAC;AAAAL,EAAA,CA5BKF,QAAQ;AA8Bd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}